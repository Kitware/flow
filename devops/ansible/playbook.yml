- hosts: all

  vars:
    r_url: http://cran.rstudio.com/bin/linux/ubuntu
    r_mirror: http://cran.cnr.Berkeley.edu

    # Set to true for Arbor bioinformatics tools
    arbor: false

    # Set to true for Visualization Toolkit tools
    vtk: false

  handlers:

  - name: restart apache
    shell: apache2ctl restart
    sudo: yes

  - name: restart girder
    shell: stop girder; start girder
    sudo: yes

  - name: restart romanesco
    shell: stop romanesco; start romanesco
    sudo: yes

  tasks:

  - name: mongodb | fetch signing key
    command: sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
    sudo: yes

  - name: mongodb | add repository
    shell:
      echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | sudo tee /etc/apt/sources.list.d/mongodb.list
      creates=/etc/apt/sources.list.d/mongodb.list
    sudo: yes

  - name: mongodb | install latest MongoDB release
    apt: pkg=mongodb-org state=present update_cache=yes
    sudo: yes

  - name: install system curl
    apt: name=curl state=present
    sudo: yes

  - name: install pycurl package in order to use the apt_repository module
    apt: pkg=python-pycurl state=present
    sudo: yes

  - name: add nodejs ppa
    shell: curl -sL https://deb.nodesource.com/setup_4.x | sudo bash -
    sudo: yes

  - name: update apt cache
    apt: update_cache=yes
    sudo: yes

  - name: install APT package dependencies
    apt: name={{ item }} state=present
    sudo: yes
    with_items:
      - python-pip
      - python2.7-dev
      - build-essential
      - python-software-properties
      - libffi-dev
      - nodejs
      - apache2
      - cmake
      - git
      - libxml2-dev

  - name: install grunt and grunt-cli globally
    npm: name={{ item }} global=yes
    with_items:
      - grunt
      - grunt-cli
    sudo: yes

  - name: install pip packages
    pip: name={{ item }} extra_args='-U'
    sudo: yes
    with_items:
      - setuptools
      - pip
      - pep8
      - virtualenv
      - girder
      - girder_client

  - name: girder | install girder web client
    command: girder-install web
    sudo: yes

  - name: r | add R repository
    shell:
      echo 'deb {{ r_url }} precise/' | sudo tee /etc/apt/sources.list.d/cran.list
      creates=/etc/apt/sources.list.d/cran.list
    sudo: yes

  - name: r | fetch R signing key
    command: apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
    sudo: yes

  - name: r | update apt cache
    apt: update_cache=yes
    sudo: yes

  - name: r | install required libraries
    apt: pkg={{ item }} state=latest
    sudo: yes
    with_items:
      - r-base-dev

  - name: romanesco | checkout romanesco
    git: repo=https://github.com/Kitware/romanesco.git dest=/vagrant/romanesco update=yes

  - name: romanesco | create worker local config file
    copy: src=worker.local.cfg dest=/vagrant/romanesco/romanesco/worker.local.cfg owner=root group=staff mode=0644
    sudo: yes

  - name: romanesco | install all required pip packages
    command: python /vagrant/romanesco/scripts/install_requirements.py
    sudo: yes

  - name: romanesco | install girder plugin (also builds web client)
    command: girder-install plugin -f -s /vagrant/romanesco
    sudo: yes
    notify:
      - restart girder

  - name: romanesco | copy config file to /etc/init/
    copy: src=romanesco.conf dest=/etc/init/romanesco.conf owner=root group=staff mode=0644
    sudo: yes
    notify:
      - restart romanesco

  - name: restart romanesco service
    shell: stop romanesco; start romanesco
    sudo: yes

  - name: ArborWebApps | checkout ArborWebApps
    git: repo=https://github.com/arborworkflows/ArborWebApps.git dest=/vagrant/ArborWebApps update=yes

  - name: tangelo-hub | npm install
    npm: path=/vagrant

  - name: tangelo-hub | grunt init
    command: grunt init chdir=/vagrant

  - name: tangelo-hub | grunt
    command: grunt --brand=TangeloHub chdir=/vagrant
    when: not arbor

  - name: tangelo-hub | grunt
    command: grunt --brand=Arbor chdir=/vagrant
    when: arbor

  - name: girder | copy upstart script to /etc/init/
    copy: src=girder.conf dest=/etc/init/girder.conf owner=root group=staff mode=0644
    sudo: yes
    notify:
      - restart girder

  - name: girder | copy config file
    copy: src=girder.local.cfg dest=/usr/local/lib/python2.7/dist-packages/girder/conf/girder.local.cfg owner=root group=staff mode=0644
    sudo: yes
    notify:
      - restart girder

  - name: girder | restart
    shell: stop girder; start girder
    sudo: yes

  - name: girder | wait for girder initialization
    wait_for: port=9000 delay=2

  - name: girder | setup admin user and turn on romanesco plugin
    command: python girder-setup.py chdir=/vagrant/devops/ansible
    notify:
      - restart girder

  - name: girder | restart
    shell: stop girder; start girder
    sudo: yes

  - name: girder | wait for girder initialization
    wait_for: port=9000 delay=2

  - name: girder | install easy mode analyses and disable auth requirement for romanesco
    command: python easymode-setup.py /vagrant/ArborWebApps chdir=/vagrant/devops/ansible

  - name: tangelo-hub | create ancestral-state symbolic link
    file: src=/vagrant/ArborWebApps/ancestral-state dest=/vagrant/app/ancestral-state state=link

  - name: tangelo-hub | create phylogenetic-signal symbolic link
    file: src=/vagrant/ArborWebApps/phylogenetic-signal dest=/vagrant/app/phylogenetic-signal state=link

  - name: apache | enable http proxy
    command: a2enmod proxy_http
    sudo: yes
    notify:
      - restart apache

  - name: apache | turn off sendfile
    lineinfile: dest=/etc/apache2/httpd.conf line='EnableSendfile Off'
    sudo: yes
    notify:
      - restart apache

  - name: apache | copy config
    copy: src=default dest=/etc/apache2/sites-available/default owner=root group=root mode=0644
    sudo: yes
    notify:
      - restart apache

  #---------------------------------------------------------------------------
  # Arbor configuration
  #---------------------------------------------------------------------------

  - name: arbor | install required libraries
    apt: pkg={{ item }} state=latest
    sudo: yes
    with_items:
      - mesa-common-dev
      - libglu1-mesa-dev
      - libgsl0-dev
      - zlib1g-dev
      - libcurl4-openssl-dev
      - libx11-dev
      - xvfb
    when: arbor

  - name: arbor | start xvfb server
    command: Xvfb :7 -screen 0 1280x1024x24
    async: 45
    poll: 0
    sudo: yes
    when: arbor

  - name: arbor | check for package upgrades
    command: /usr/bin/Rscript --slave --no-save --no-restore-history -e "update.packages(checkBuilt=TRUE, ask=FALSE, repos='{{ r_mirror }}')"
    sudo: yes
    when: arbor

  - name: arbor | install packages
    command: /usr/bin/Rscript --slave --no-save --no-restore-history -e "if (! ('{{ item }}' %in% installed.packages()[,'Package'])) install.packages(pkgs='{{ item }}', repos=c('{{ r_mirror }}'))"
    sudo: yes
    with_items:
      - rgl
      - ape
      - geiger
      - nlme
      - codetools
      - devtools
      - diversitree
      - phytools
      - dplyr
    environment:
      DISPLAY: :7
    when: arbor

  - name: arbor | install github packages
    command: /usr/bin/Rscript --slave --no-save --no-restore-history -e "parts<-unlist(strsplit('{{ item }}', '/'));options(repos='{{ r_mirror }}');library(devtools);install_github(parts[2], parts[1])"
    sudo: yes
    with_items:
      - hafen/cardoonTools
      - tangelo-hub/romanescoTools
      - arborworkflows/aRbor
    environment:
      DISPLAY: :7
    when: arbor

  #---------------------------------------------------------------------------
  # VTK configuration
  #---------------------------------------------------------------------------

  - name: vtk | download
    get_url: dest=/home/vagrant/vtk.tar.gz url=http://midas3.kitware.com/midas/download/bitstream/366970/vtk-precise64-118242.tar.gz
    when: vtk

  - name: vtk | extract
    unarchive: copy=no src=/home/vagrant/vtk.tar.gz dest=/home/vagrant/
    when: vtk
