- hosts: mongo
  pre_tasks:
    - name: Update package list
      apt:
        update_cache: true
      become: true
      become_user: root
      
    - name: Install python system libraries
      apt:
        name:
          - python3-pip
          - python-pip
          - python-virtualenv
          - python-dev
      become: true
      become_user: root

  roles:
    - role: ansible-role-mongodb
      become: yes

- hosts: rabbitmq
  vars:
    rabbitmq_users_remove: []

  roles:
    - role: Stouts.rabbitmq
      become: yes

- hosts: girder
  vars:
    girder_path: "/opt/girder"
    girder_build_executable: "{{ ansible_user_dir }}/.virtualenvs/girder/bin/girder-install"
    girder_virtualenv: "{{ ansible_user_dir }}/.virtualenvs/girder"
    girder_version: "v1.7.0"
    girder_worker_user: "{{ ansible_user_id }}"
    girder_worker_path: "/opt/girder_worker"
    girder_worker_plugins: ["r"]
    girder_worker_version: "8dfe69b"
    girder_worker_executable: "{{ girder_virtualenv }}/bin/girder-worker"
    celery_executable: "{{ girder_virtualenv }}/bin/celery"
    girder_worker_virtualenv: "{{ ansible_user_dir }}/.virtualenvs/girder"
    flow_path: "/opt/flow"
    flow_version: "pin-grunt-shell"

  pre_tasks:
    # Just for creating the virtualenv. Otherwise
    # girder is trying to use the ansible_python which
    # is python3.
    - name: Explicitly create virtualenv for girder
      pip:
        name: requests
        virtualenv: "{{ girder_virtualenv }}"
        virtualenv_python: "/usr/bin/python"

  roles:
    - role: girder
    - role: arbor
    - role: flow
    - role: girder_worker

  post_tasks:
    - name: Pin npm to v3 (for Girder 1.x)
      command: "npm install -g npm@3"
      become: yes
      become_user: root

    - name: Pin pip < 10
      pip:
        name: pip == 9.0.3
        virtualenv: "{{ girder_virtualenv }}"

    - name: Install Flow Plugin
      shell: "{{ girder_virtualenv }}/bin/girder-install plugin -s {{ flow_path }}"

    - name: Install Girder Worker Plugin
      shell: "{{ girder_virtualenv }}/bin/girder-install plugin -s {{ girder_worker_path }}"

    - name: Copy Girder Worker configuration
      template:
        src=girder_worker.local.cfg.j2
        dest="{{ girder_worker_path }}/girder_worker/worker.local.cfg"

    - name: Start Girder Worker
      service:
        name: girder_worker
        state: started
      become: yes

    - name: Install girder-client
      pip:
        name: girder-client
        state: present
      become: yes

    - name: Create an 'Girder' user
      girder:
        port: 8080
        user:
          firstName: "Girder"
          lastName: "Girder"
          login: "girder"
          password: "girder"
          email: "girder@example.com"
          admin: yes
        state: present

    - name: Activate Plugins
      girder:
        port: 8080
        username: "girder"
        password: "girder"
        plugins:
          - worker
          - flow
        state: present

    - name: Create assetstore directory
      file:
        path: "/opt/data"
        state: directory
        group: "{{ ansible_user_id }}"
        owner: "{{ ansible_user_id }}"
        mode: 0755
      become: yes

    - name: Create filesystem assetstore
      girder:
        port: 8080
        username: "girder"
        password: "girder"
        assetstore:
          name: "Filesystem Assetstore"
          type: "filesystem"
          root: "/opt/data"
          current: true
        state: present

    - name: Restart Flow
      girder:
        port: 8080
        username: "girder"
        password: "girder"
        put:
          path: "system/restart"

    - wait_for:
        port: 8080
        delay: 5

    - name: Disable flow.require_auth
      girder:
        port: 8080
        username: "girder"
        password: "girder"
        setting:
          key: "flow.require_auth"
          value: false
        state: present
